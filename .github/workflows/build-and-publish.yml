name: Build Image and Publish
on:
  schedule:
    - cron: "0 5 * * *"
  push:
    branches:
      - development
      - experimental
  release:
    types: [published]


env:
  dockerhub: ${{ secrets.DOCKERHUB_NAMESPACE }}/pihole
  ghcr: ghcr.io/${{ github.repository_owner }}/pihole
  components_branch: ${{ github.event_name == 'release' && 'master' || 'development' }}
  web_branch: tweak/hide_dnsmasq_warnings

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/386
            runner: ubuntu-latest
          - platform: linux/arm/v6
            runner: ubuntu-24.04-arm
          - platform: linux/arm/v7
            runner: ubuntu-24.04-arm
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
          - platform: linux/riscv64
            runner: ubuntu-24.04-arm

    steps:
      - name: Prepare name for digest up/download
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - &checkout-repo
        name: Checkout Repo
        if: github.event_name != 'schedule'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - &checkout-dev
        name: Checkout dev branch if scheduled
        if: github.event_name == 'schedule'
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          ref: development

      - &docker-meta
        name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f #v5.8.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ env.dockerhub }}
            ${{ env.ghcr }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=schedule,pattern=nightly
            type=raw,value=nightly,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/development' }}
            type=raw,value=experimental,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/experimental' }}
            type=ref,event=tag

      - &login-dockerhub
        name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3.6.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - &login-ghcr
        name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 #v3.6.0
        with:
          platforms: ${{ matrix.platform}}

      - &setup-buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 #v3.11.1

      - name: Build container and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 #v6.18.0
        with:
          context: ./src/
          platforms: ${{ matrix.platform }}
          build-args: |
            PIHOLE_DOCKER_TAG=${{ steps.meta.outputs.version }}
            FTL_BRANCH=${{ env.components_branch }}
            CORE_BRANCH=${{ env.components_branch }}
            WEB_BRANCH=${{ env.web_branch }}
            PADD_BRANCH=${{ env.components_branch }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=image,name=${{ env.dockerhub }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digests
        run: |
          mkdir -p /tmp/digests
          digest_docker="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest_docker#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 #v5.0.0
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  # Merge all the digests into a single file
  # If we would push immediately above, the individual runners would overwrite each other's images
  # https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
  merge-and-deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - *checkout-repo
      - *checkout-dev

      - name: Download digests
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 #v6.0.0
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - *setup-buildx
      - *docker-meta
      - *login-dockerhub
      - *login-ghcr

      - name: Create manifest list and push (DockerHub and GitHub Container Registry)
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.dockerhub }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.ghcr }}@sha256:%s ' *)

      - name: Inspect images
        run: |
          docker buildx imagetools inspect ${{ env.dockerhub }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.ghcr }}:${{ steps.meta.outputs.version }}
